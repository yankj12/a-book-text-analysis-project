<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yan.novel.mapping.NovelChapterMapper">
	
    <insert id="insertNovelChapter" parameterType="com.yan.novel.schema.NovelChapter">
    	insert into NovelChapter 
    	(novelUrlToken,  serialNo,  chapterUrlToken,  volumeSerialNo, volumeName, chapterSerialName,  chapterName,  chapterFullName,  chapterUrl,  chapterContent,  insertTime,  updateTime) 
    	values 
    	(#{novelUrlToken}, #{serialNo}, #{chapterUrlToken}, #{volumeSerialNo}, #{volumeName}, #{chapterSerialName}, #{chapterName}, #{chapterFullName}, #{chapterUrl}, #{chapterContent}, #{insertTime}, #{updateTime})
    </insert>
    
    <insert id="insertBathNovelChapter" parameterType="java.util.List">
    	insert into NovelChapter 
    	(novelUrlToken,  serialNo,  chapterUrlToken, volumeSerialNo, volumeName, chapterSerialName,  chapterName,  chapterFullName,  chapterUrl,  chapterContent,  insertTime,  updateTime) 
    	values 
    	<foreach collection="list" item="item" index="index" separator=",">
            (#{item.novelUrlToken}, #{item.serialNo}, #{item.chapterUrlToken}, #{item.volumeSerialNo}, #{item.volumeName}, #{item.chapterSerialName}, #{item.chapterName}, #{item.chapterFullName}, #{item.chapterUrl}, #{item.chapterContent}, #{item.insertTime}, #{item.updateTime})
        </foreach>
    </insert>
    
    <select id="queryNovelChapterByNovelUrlTokenAndChapterUrlToken" parameterType="string" resultType="com.yan.novel.schema.NovelChapter">
    	select * from NovelChapter where novelUrlToken = #{novelUrlToken} and chapterUrlToken = #{chapterUrlToken}
    </select>
    
    <select id="queryNovelChaptersByNovelUrlToken" parameterType="string" resultType="com.yan.novel.schema.NovelChapter">
    	select * from NovelChapter where novelUrlToken = #{novelUrlToken}
    </select>
    
    <select id="countNovelChaptersBySerialNoRegion" parameterType="java.util.Map" resultType="int">
    	select count(*) from NovelChapter where novelUrlToken=#{novelUrlToken} and serialNo &gt;= #{fromSerialNo} and serialNo &lt;= #{toSerialNo}
    </select>
    
    <delete id="deleteNovelChaptersBySerialNoRegion" parameterType="java.util.Map">
    	delete from NovelChapter where novelUrlToken=#{novelUrlToken} and serialNo &gt;= #{fromSerialNo} and serialNo &lt;= #{toSerialNo}
    </delete>
    
    <update id="updateChapterContentByNovelUrlTokenAndChapterUrlToken" parameterType="com.yan.novel.schema.NovelChapter">
    	update NovelChapter set chapterContent=#{chapterContent}, updateTime=#{updateTime} where novelUrlToken = #{novelUrlToken} and chapterUrlToken = #{chapterUrlToken}
    </update>
    
    <update id="updateChapterContentBath" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";" open="" close="">
	        update NovelChapter set chapterContent=#{item.chapterContent}, updateTime=#{item.updateTime} where novelUrlToken = #{item.novelUrlToken} and chapterUrlToken = #{item.chapterUrlToken}
	    </foreach>
    </update>
    
</mapper>